MAN(1)                        Manual pager utils                        MAN(1)

NAME
       man - an interface to the on-line reference manuals

SYNOPSIS
       man  [-C  file]  [-d]  [-D]  [--warnings[=warnings]]  [-R encoding] [-L
       locale] [-m system[,...]] [-M path] [-S list]  [-e  extension]  [-i|-I]
       [--regex|--wildcard]   [--names-only]  [-a]  [-u]  [--no-subpages]  [-P
       pager] [-r prompt] [-7] [-E encoding] [--no-hyphenation] [--no-justifi‐
       cation]  [-p  string]  [-t]  [-T[device]]  [-H[browser]] [-X[dpi]] [-Z]
       [[section] page ...] ...
       man -k [apropos options] regexp ...
       man -K [-w|-W] [-S list] [-i|-I] [--regex] [section] term ...
       man -f [whatis options] page ...
       man -l [-C file] [-d] [-D] [--warnings[=warnings]]  [-R  encoding]  [-L
       locale]  [-P  pager]  [-r  prompt]  [-7] [-E encoding] [-p string] [-t]
       [-T[device]] [-H[browser]] [-X[dpi]] [-Z] file ...
       man -w|-W [-C file] [-d] [-D] page ...
       man -c [-C file] [-d] [-D] page ...
       man [-hV]

DESCRIPTION
       man is the system's manual pager. Each page argument given  to  man  is
       normally  the  name of a program, utility or function.  The manual page
       associated with each of these arguments is then found and displayed.  A
       section,  if  provided, will direct man to look only in that section of
       the manual.  The default action is to search in all  of  the  available
       sections, following a pre-defined order and to show only the first page
       found, even if page exists in several sections.

       The table below shows the section numbers of the manual followed by the
       types of pages they contain.

       1   Executable programs or shell commands
       2   System calls (functions provided by the kernel)
       3   Library calls (functions within program libraries)
       4   Special files (usually found in /dev)
       5   File formats and conventions eg /etc/passwd
       6   Games
       7   Miscellaneous  (including  macro  packages  and  conventions), e.g.
           man(7), groff(7)
       8   System administration commands (usually only for root)
       9   Kernel routines [Non standard]

       A manual page consists of several sections.

       Conventional  section  names  include  NAME,  SYNOPSIS,  CONFIGURATION,
       DESCRIPTION,  OPTIONS,  EXIT STATUS, RETURN VALUE, ERRORS, ENVIRONMENT,
       FILES, VERSIONS, CONFORMING TO,  NOTES,  BUGS,  EXAMPLE,  AUTHORS,  and
       SEE ALSO.

       The following conventions apply to the SYNOPSIS section and can be used
       as a guide in other sections.

       bold text          type exactly as shown.
       italic text        replace with appropriate argument.
       [-abc]             any or all arguments within [ ] are optional.
       -a|-b              options delimited by | cannot be used together.
       argument ...       argument is repeatable.
       [expression] ...   entire expression within [ ] is repeatable.

       Exact rendering may vary depending on the output device.  For instance,
       man will usually not be able to render italics when running in a termi‐
       nal, and will typically use underlined or coloured text instead.

       The command or function illustration is a pattern that should match all
       possible invocations.  In some cases it is advisable to illustrate sev‐
       eral exclusive invocations as is shown in the SYNOPSIS section of  this
       manual page.

EXAMPLES
       man ls
           Display the manual page for the item (program) ls.

OVERVIEW
       Many  options are available to man in order to give as much flexibility
       as possible to the user.  Changes can be made to the search path,  sec‐
       tion  order,  output  processor,  and  other  behaviours and operations
       detailed below.

       If set, various environment variables are interrogated to determine the
       operation  of  man.   It  is  possible  to set the `catch all' variable
       $MANOPT to any string in command line format with  the  exception  that
       any  spaces  used as part of an option's argument must be escaped (pre‐
       ceded by a backslash).  man will parse $MANOPT prior to parsing its own
       command  line.   Those options requiring an argument will be overridden
       by the same options found on the command line.  To  reset  all  of  the
       options set in $MANOPT, -D can be specified as the initial command line
       option.  This will allow man to `forget' about the options specified in
       $MANOPT although they must still have been valid.

       The  manual  pager  utilities  packaged as man-db make extensive use of
       index database caches.  These caches contain information such as  where
       each  manual  page  can  be found on the filesystem and what its whatis
       (short one line description of the man page) contains, and allow man to
       run  faster  than  if it had to search the filesystem each time to find
       the appropriate manual page.  If requested using  the  -u  option,  man
       will  ensure  that  the caches remain consistent, which can obviate the
       need to manually run software to update traditional whatis  text  data‐
       bases.

       If  man  cannot  find a mandb initiated index database for a particular
       manual page hierarchy, it will still search for  the  requested  manual
       pages,  although  file globbing will be necessary to search within that
       hierarchy.  If whatis or apropos fails to find an index it will try  to
       extract information from a traditional whatis database instead.

       These  utilities  support  compressed  source  nroff  files  having, by
       default, the extensions of .Z, .z and .gz.  It is possible to deal with
       any  compression  extension, but this information must be known at com‐
       pile time.  Also, by default, any cat  pages  produced  are  compressed
       using gzip.  Each `global' manual page hierarchy such as /usr/share/man
       or /usr/X11R6/man may have any directory as  its  cat  page  hierarchy.
       Traditionally  the cat pages are stored under the same hierarchy as the
       man pages, but for reasons such as those specified in the File  Hierar‐
       chy  Standard  (FHS),  it  may  be better to store them elsewhere.  For
       details on how to do this, please read manpath(5).  For details on  why
       to do this, read the standard.

       International  support is available with this package.  Native language
       manual pages are accessible (if available on your system)  via  use  of
       locale  functions.   To  activate  such support, it is necessary to set
       either $LC_MESSAGES, $LANG  or  another  system  dependent  environment
       variable to your language locale, usually specified in the POSIX 1003.1
       based format:

       <language>[_<territory>[.<character-set>[,<version>]]]

       If the desired page is available in your locale, it will  be  displayed
       in lieu of the standard (usually American English) page.

       Support  for  international message catalogues is also featured in this
       package and can be activated in the same way, again if  available.   If
       you  find  that  the  manual pages and message catalogues supplied with
       this package are not available in your native language  and  you  would
       like  to supply them, please contact the maintainer who will be coordi‐
       nating such activity.

       For information regarding other features and extensions available  with
       this manual pager, please read the documents supplied with the package.

DEFAULTS
       man  will search for the desired manual pages within the index database
       caches. If the -u option is given, a cache consistency  check  is  per‐
       formed  to  ensure the databases accurately reflect the filesystem.  If
       this option is always given, it is not generally necessary to run mandb
       after the caches are initially created, unless a cache becomes corrupt.
       However, the cache consistency check can be slow on systems  with  many
       manual  pages  installed, so it is not performed by default, and system
       administrators may wish to run mandb every week or so to keep the data‐
       base  caches  fresh.   To forestall problems caused by outdated caches,
       man will fall back to file globbing if a cache lookup fails, just as it
       would if no cache was present.

       Once  a  manual page has been located, a check is performed to find out
       if a relative preformatted `cat' file already exists and is newer  than
       the nroff file.  If it does and is, this preformatted file is (usually)
       decompressed and then displayed, via use of a pager.  The pager can  be
       specified  in  a number of ways, or else will fall back to a default is
       used (see option -P for details).  If no cat is found or is older  than
       the  nroff  file, the nroff is filtered through various programs and is
       shown immediately.

       If a cat file can be produced (a relative cat directory exists and  has
       appropriate  permissions),  man will compress and store the cat file in
       the background.

       The filters are deciphered by a number of means. Firstly,  the  command
       line option -p or the environment variable $MANROFFSEQ is interrogated.
       If -p was not used and the environment variable was not set,  the  ini‐
       tial  line  of  the nroff file is parsed for a preprocessor string.  To
       contain a valid preprocessor string, the first line must resemble

       '\" <string>

       where string can be any combination of letters described by  option  -p
       below.

       If  none of the above methods provide any filter information, a default
       set is used.

       A formatting pipeline is formed from the filters and the  primary  for‐
       matter  (nroff or [tg]roff with -t) and executed.  Alternatively, if an
       executable program mandb_nfmt (or mandb_tfmt with -t) exists in the man
       tree  root,  it  is executed instead.  It gets passed the manual source
       file, the preprocessor string, and optionally the device specified with
       -T or -E as arguments.

HISTORY
       1990, 1991 - Originally written by John W. Eaton (jwe@che.utexas.edu).

       Dec 23 1992: Rik Faith (faith@cs.unc.edu) applied bug fixes supplied by
       Willem Kasdorp (wkasdo@nikhefk.nikef.nl).

       30th April 1994 - 23rd February 2000: Wilf. (G.Wilford@ee.surrey.ac.uk)
       has been developing and maintaining this package with the help of a few
       dedicated people.

       30th  October  1996  -  30th  March  2001:   Fabrizio   Polacco   <fpo‐
       lacco@debian.org>  maintained  and enhanced this package for the Debian
       project, with the help of all the community.

       31st March 2001 - present day: Colin  Watson  <cjwatson@debian.org>  is
       now developing and maintaining man-db.

2.6.3                             2012-09-17                            MAN(1)

